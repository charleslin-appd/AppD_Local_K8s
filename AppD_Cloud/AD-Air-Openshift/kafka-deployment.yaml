---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: ../kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  ports:
    - name: "9092"
      port: 9092
      targetPort: 9092
  selector:
    io.kompose.service: kafka
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    appdynamics.com/exporter_type: "kafkajmx"
    appdynamics.com/kafka_cluster_name: "kafka"
    prometheus.io/scrape: "true"
    prometheus.io/path: "/"
    prometheus.io/port: "5556"
  name: kafka-jmx
spec:
  ports:
    - name: "kjmxexporter"
      port: 5556
      targetPort: 5556
  selector:
    io.kompose.service: kafka
  clusterIP: ""
  sessionAffinity: None
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ../kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: ../kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:2.8.1
          env:
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: kafka
            - name: KAFKA_ADVERTISED_PORT
              value: "9092"
            - name: KAFKA_CREATE_TOPICS
              value: flight-services,customer-services
            - name: KAFKA_PORT
              value: "9092"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: JMX_PORT
              value: "5555"
          ports:
            - containerPort: 9092
          resources: {}
        - name: metrics
          image: bitnami/jmx-exporter:0.17.2
          command:
            - java
          args:
            - -XX:MaxRAMPercentage=100
            - -XshowSettings:vm
            - -jar
            - jmx_prometheus_httpserver.jar
            - "5556"
            - /etc/jmx-kafka/jmx-kafka-prometheus.yml
          ports:
            - containerPort: 5556
          volumeMounts:
            - name: jmx-config
              mountPath: /etc/jmx-kafka
          resources:
            requests:
              cpu: 0m
              memory: 60Mi
            limits:
              memory: 120Mi
      volumes:
        - name: jmx-config
          configMap:
            name: kafka-jmx-configuration-final
      hostname: kafka
      restartPolicy: Always
status: {}
