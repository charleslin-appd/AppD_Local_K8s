global:
  clusterName: lab-cluster-charleli # use --set command line argument and $USER for personalized cluster name
appdynamics-otel-collector:
  #clientId: xxxxxxxxxxxxxx # use --set command line argument or a separate yaml file
  #clientSecret: xxxxxxxxxxxxxx # use --set command line argument or a separate yaml file
  endpoint: https://lab1.observe.appdynamics.com/data
  tokenUrl: https://lab1.observe.appdynamics.com/auth/dfdbdf71-7322-44d0-85fb-36c69a7c3789/default/oauth2/token
  configOverride:
    exporters:
      logging:
        #loglevel: debug	# loglevel is deprecated use verbosity instead
        verbosity: normal
      # otlp:
       # endpoint: "http://appdynamics-otel-collector-service.appdynamics.svc.cluster.local:4317"
       # tls:
       #   insecure: true
    processors:
      batch:
        timeout: 30s
        send_batch_size: 250
    service:
      extensions: [health_check, oauth2client]
      pipelines:
        logs:
          receivers: [otlp]
          processors: [batch, memory_limiter]
          exporters: [otlphttp]
        metrics:
          receivers: [otlp]
          processors: [batch, memory_limiter]
          exporters: [logging, otlphttp]
        traces:
          receivers: [otlp]
          processors: [batch, memory_limiter]
          exporters: [logging, otlphttp]
  enablePrometheus: true
  spec:
    replicas: 1
    resources:
      limits:
        cpu: 500m
        memory: 1024Mi
      requests:
        cpu: 200m
        memory: 512Mi    
appdynamics-cloud-k8s-monitoring:
  install:
    logCollector: true
  clustermonConfig:
    events:
      enabled: true
      severityToExclude: []
      reasonToExclude: []
      severeGroupByReason: []
  logCollectorConfig:
    container:
      logging:
        level: info
      conditionalConfigs: # renamed from conditions -> conditionalConfigs
        - condition:
            operator: contains
            key: kubernetes.pod.name
            value: ecom-
          config: # new
            messageParser:
              log4J:
                enabled: false
                pattern: "%d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %logger{36} - [%X{AD.requestGUID}] [trace_id=%X{appd.trace.id} span_id=%X{appd.span.id} trace_flags=%X{trace_flags}] %msg %n"
              logback:
                enabled: true
                pattern: "%d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %logger{36} - [%X{AD.requestGUID}] [trace_id=%X{appd.trace.id} span_id=%X{appd.span.id} trace_flags=%X{trace_flags}] %msg %n"
            multiLineMatch: after
            multiLinePattern: '^\d{4}-\d{2}-\d{2}' # default is after
            multiLineNegate: true # default is false          
      dropFields:
        [
          "agent",
          "stream",
          "ecs",
          "input",
          "orchestrator",
          "k8s.annotations.appdynamics",
          "k8s.labels",
          "k8s.node.labels",
          "cloud",
        ]
      batchSize: 1000
      maxBytes: 1000000
  #Daemonset specific configs
  clustermonPod:
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 64Mi
  inframonPod:
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 64Mi